<Window x:Class="SoftwareHelper.Views.EmbedDeasktopView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:shell="http://schemas.microsoft.com/winfx/2006/xaml/presentation/shell"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:tb="http://www.hardcodet.net/taskbar"
        xmlns:drag="urn:gong-wpf-dragdrop"
        xmlns:vm="clr-namespace:SoftwareHelper.ViewModels"
        xmlns:CustomControls="clr-namespace:SoftwareHelper.CustomControls"
        xmlns:helpers="clr-namespace:SoftwareHelper.Helpers"
        xmlns:views="clr-namespace:SoftwareHelper.Views"
        mc:Ignorable="d"
        ResizeMode="NoResize"
        TextOptions.TextFormattingMode="Display" UseLayoutRounding="True"
        SnapsToDevicePixels="True" WindowStyle="None" Background="Transparent"
        Title="SoftwareHelper" Height="600" Width="90"
        ShowInTaskbar="False">
    <shell:WindowChrome.WindowChrome>
        <shell:WindowChrome GlassFrameThickness="-1"/>
    </shell:WindowChrome.WindowChrome>
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding ViewLoaded}" CommandParameter="{Binding ElementName=myNotifyIcon}"></i:InvokeCommandAction>
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <FrameworkElement.DataContext>
        <vm:MainVM/>
    </FrameworkElement.DataContext>
    <FrameworkElement.Resources>
        <helpers:DarkAndLightConvert x:Key="darkAndLightConvert"/>

        <SolidColorBrush x:Key="TitleBarBackgroundBrush" Color="#FF819F" />
        <Style x:Key="CloseButton" TargetType="{x:Type Button}">
            <Setter Property="ToolTip" Value="Remove"/>
            <Setter Property="Foreground" Value="{DynamicResource NormalBlackBrush}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Ellipse x:Name="_Ellipse" Height="12" Width="12"
                                     Fill="{DynamicResource NormalWhiteBrush}"
                                     Opacity=".8"/>
                            <ContentPresenter Name="TextArea"/>
                        </Grid>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Fill" TargetName="_Ellipse" Value="{StaticResource TitleBarBackgroundBrush}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Margin" TargetName="TextArea" Value="0,2,0,0"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Geometry x:Key="DragPath">M256 384h128v-128h-128v128zM448 384h128v-128h-128v128zM640 256v128h128v-128h-128zM256 576h128v-128h-128v128zM448 576h128v-128h-128v128zM640 576h128v-128h-128v128zM256 768h128v-128h-128v128zM448 768h128v-128h-128v128zM640 768h128v-128h-128v128z</Geometry>
        <DataTemplate x:Key="ApplicationTemplate">
            <DataTemplate.Resources>
                <Storyboard x:Key="OnMouseEnter">
                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="border" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                        <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                        <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1.3"/>
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="border" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                        <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                        <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1.3"/>
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="border" Storyboard.TargetProperty="(UIElement.Opacity)">
                        <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0.4"/>
                        <SplineDoubleKeyFrame KeyTime="00:00:00.5000000" Value="1"/>
                    </DoubleAnimationUsingKeyFrames>
                </Storyboard>
                <Storyboard x:Key="OnMouseLeave">
                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="border" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                        <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1.3"/>
                        <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1"/>
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="border" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                        <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1.3"/>
                        <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1"/>
                    </DoubleAnimationUsingKeyFrames>
                </Storyboard>
            </DataTemplate.Resources>
            <Border RenderTransformOrigin="0.5,0.5" x:Name="border" 
                    Padding="4" Cursor="Hand" MaxHeight="90" Background="Transparent"
                    Tag="{Binding Group}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="MouseLeftButtonDown">
                        <i:InvokeCommandAction Command="{Binding DataContext.SelectionChangedCommand,RelativeSource={RelativeSource AncestorType=Window}}" CommandParameter="{Binding}"></i:InvokeCommandAction>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <Border.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform ScaleX="1" ScaleY="1"/>
                        <SkewTransform AngleX="0" AngleY="0"/>
                        <RotateTransform Angle="0"/>
                        <TranslateTransform X="0" Y="0"/>
                    </TransformGroup>
                </Border.RenderTransform>
                <Grid>
                    <StackPanel Orientation="Vertical">
                        <Image Source="{Binding IconPath}" Margin="0,4,0,0"/>
                        <TextBlock Text="{Binding Name}" 
                               MaxWidth="70" TextWrapping="Wrap"
                               VerticalAlignment="Center"
                               Block.TextAlignment="Center" 
                               HorizontalAlignment="Center"
                               Foreground="{DynamicResource NormalWhiteBrush}"/>
                    </StackPanel>
                    <Button x:Name="PART_Button" Style="{StaticResource CloseButton}"
                        HorizontalAlignment="Stretch" VerticalAlignment="Top" Margin="30,0,0,0"
                        Cursor="Hand" Visibility="{Binding DataContext.IsDragDrop,RelativeSource={RelativeSource AncestorType=Window},Converter={StaticResource booleanToVisibilityConverter}}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <i:InvokeCommandAction Command="{Binding DataContext.RemoveApplictionCommand,RelativeSource={RelativeSource AncestorType=Window}}" CommandParameter="{Binding}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        <Button.Content>
                            <Path Data="{StaticResource ClosePath}" StrokeThickness="0.5"
                                  Stretch="Fill" Stroke="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}" 
                                  Height="6" Width="6"/>
                        </Button.Content>
                    </Button>
                </Grid>
            </Border>
            <DataTemplate.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsMouseOver" Value="True"/>
                        <Condition Property="Visibility" SourceName="PART_Button"  Value="Collapsed"/>
                    </MultiTrigger.Conditions>
                    <MultiTrigger.EnterActions>
                        <BeginStoryboard Storyboard="{StaticResource OnMouseEnter}"/>
                    </MultiTrigger.EnterActions>
                    <MultiTrigger.ExitActions>
                        <BeginStoryboard Storyboard="{StaticResource OnMouseLeave}"/>
                    </MultiTrigger.ExitActions>
                </MultiTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>

    </FrameworkElement.Resources>
    <Grid>
        <tb:TaskbarIcon x:Name="myNotifyIcon"
                    IconSource="pack://application:,,,/comic.ico"
                    PopupActivation="DoubleClick"
                    NoLeftClickDelay="True">
            <tb:TaskbarIcon.TrayToolTip>
                <Border
                            Padding="8"
                            Background="{StaticResource NormalWhiteBrush}"
                            BorderBrush="{StaticResource NormalBlackBrush}"
                            BorderThickness="1"
                            TextElement.Foreground="{StaticResource NormalBlackBrush}">
                    <StackPanel Orientation="Vertical">
                        <!--  Title  -->
                        <TextBlock
                                    Margin="0,0,0,2"
                                    FontSize="15"
                                    FontWeight="Medium"
                                    Text="SoftwareHelper" />
                        <TextBlock>
                            <Run>授之以鱼，不如授之以渔</Run>
                            <LineBreak/>
                            <Run>微信公众号：WPFDevelopers</Run>
                        </TextBlock>

                    </StackPanel>
                </Border>
            </tb:TaskbarIcon.TrayToolTip>
            <tb:TaskbarIcon.ContextMenu>
                <ContextMenu PlacementTarget="{Binding ElementName=myNotifyIcon}">
                    <ContextMenu.Resources>
                        <Style TargetType="{x:Type Path}">
                            <Setter Property="Height" Value="15"/>
                            <Setter Property="Width" Value="15"/>
                            <Setter Property="Fill" Value="{DynamicResource NormalMenuBlackBrush}"/>
                            <Setter Property="Stretch" Value="Fill"/>
                        </Style>
                    </ContextMenu.Resources>
                    <MenuItem Header="公众号">
                        <MenuItem.ToolTip>
                            <ToolTip>
                                <Rectangle Width="200" Height="300">
                                    <Rectangle.Fill>
                                        <ImageBrush ImageSource="/SoftwareHelper;component/Images/wechat.png"
                                                    Stretch="Uniform"/>
                                    </Rectangle.Fill>
                                </Rectangle>
                            </ToolTip>
                        </MenuItem.ToolTip>
                    </MenuItem>
                    <MenuItem Header="QQ群">
                        <MenuItem.ToolTip>
                            <ToolTip>
                                <Rectangle Width="200" Height="300">
                                    <Rectangle.Fill>
                                        <ImageBrush ImageSource="/SoftwareHelper;component/Images/20201130100057.png"
                                                    Stretch="Uniform"/>
                                    </Rectangle.Fill>
                                </Rectangle>
                            </ToolTip>
                        </MenuItem.ToolTip>
                    </MenuItem>
                    <MenuItem Header="关于" Command="{Binding GithubCommand}">
                        <MenuItem.Icon>
                            <Path Data="{DynamicResource GithubPath}"/>
                        </MenuItem.Icon>
                    </MenuItem>

                    <MenuItem Header="透明度" ItemsSource="{Binding Path=OpacityItemList}" DisplayMemberPath="ItemName">
                        <MenuItem.ItemContainerStyle>
                            <Style TargetType="MenuItem">
                                <Setter Property="IsCheckable" Value="True"/>
                                <Setter Property="IsChecked" Value="{Binding Path=IsSelected, Mode=TwoWay}"/>
                                <Setter Property="Padding" Value="2 6 2 6" />
                            </Style>
                        </MenuItem.ItemContainerStyle>
                    </MenuItem>
                    <MenuItem Header="颜色拾取" Command="{Binding ColorCommand}"/>
                    <MenuItem Header="{Binding IsDark,Converter={StaticResource darkAndLightConvert}}" Command="{Binding ThemesCommand}"/>
                    <MenuItem Header="关闭" Click="MenuItem_Click"/>
                </ContextMenu>
            </tb:TaskbarIcon.ContextMenu>
        </tb:TaskbarIcon>
        <Rectangle Opacity="{Binding MainOpacity}" Margin="1,0,0,0"
                   Name="PageGround" Fill="{DynamicResource NormalBlackBrush}"/>

        <CustomControls:SwitchMenu x:Name="AppSwitchList" ItemsSource="{Binding ApplicationList}" Orientation="Vertical"
                                       ItemTemplate="{StaticResource ApplicationTemplate}" IsDragDrop="{Binding IsDragDrop}"
                                       drag:DragDrop.UseDefaultDragAdorner="True" drag:DragDrop.DefaultDragAdornerOpacity="0.5"
                                       drag:DragDrop.IsDragSource="{Binding IsDragDrop}" drag:DragDrop.IsDropTarget="True"
                                       drag:DragDrop.ItemsPanelOrientation="Vertical" Margin="0,20">
            <!--
                                       VirtualizingStackPanel.IsVirtualizing="False"
                                       VirtualizingStackPanel.VirtualizationMode="Standard"
                                       IsTextSearchCaseSensitive="False"
                                       IsTextSearchEnabled="True"
                                       TextSearch.TextPath="Name"-->
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="MouseRightButtonDown">
                    <i:InvokeCommandAction Command="{Binding MouseRightDragCommand}"></i:InvokeCommandAction>
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </CustomControls:SwitchMenu>
        <Border x:Name="KeyDownPanel" 
                Width="60" Height="60" 
                HorizontalAlignment="Center"
                VerticalAlignment="Center" 
                Background="{DynamicResource NormalBlackBrush}"
                CornerRadius="7"  Visibility="Collapsed"
                SnapsToDevicePixels="True"
                UseLayoutRounding="True">
            <TextBlock x:Name="KeyDownText" 
                       HorizontalAlignment="Center" VerticalAlignment="Center"
                       FontSize="22" Foreground="{DynamicResource NormalWhiteBrush}" />
        </Border>
    </Grid>
</Window>
