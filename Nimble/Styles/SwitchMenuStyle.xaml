<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:Nimble.Controls">
    

    <BooleanToVisibilityConverter x:Key="booleanToVisibilityConverter"/>
    <Style x:Key="PathButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border x:Name="PART_border" 
                                CornerRadius="2" 
                                Background="{DynamicResource NormalBlackBrush}" 
                                Opacity=".2"></Border>
                        <ContentPresenter x:Name="contentPresenter" 
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="PART_border" Property="Opacity" Value=".4" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="contentPresenter" Property="Margin" Value="0,1,0,0"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="controls:SwitchMenu">
        <Setter Property="BorderBrush" Value="{DynamicResource NormalBlackBrush}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:SwitchMenu">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="auto" />
                        </Grid.ColumnDefinitions>
                        <ScrollViewer x:Name="PART_ScrollViewer" Grid.Row="1" Grid.Column="1" HorizontalScrollBarVisibility="Hidden"
                                      VerticalScrollBarVisibility="Hidden">
                            <ItemsPresenter/>
                        </ScrollViewer>
                        <Rectangle x:Name="PART_Rectangle" Grid.Row="1" Grid.Column="1" StrokeThickness="4" 
                                   Stroke="{DynamicResource NormalWhiteBrush}" 
                                   StrokeDashArray="1,1" 
                                   Visibility="{TemplateBinding IsDragDrop,Converter={StaticResource booleanToVisibilityConverter}}"/>
                        <Button x:Name="PART_PreviousButton" Grid.Row="1" Grid.Column="0"  
                                Visibility="Collapsed" Style="{DynamicResource PathButtonStyle}"
                                 Width="80" Height="24">
                            <Path Margin="2" Data="{DynamicResource UpGeometry}" 
                                  Width="14" Height="10"
                                  Fill="{DynamicResource NormalWhiteBrush}" Stretch="Fill" />
                        </Button>
                        <Button x:Name="PART_NextButton" Grid.Row="1" Grid.Column="2" 
                                Visibility="Collapsed" Style="{DynamicResource PathButtonStyle}"
                                 Width="80" Height="24">
                            <Path Margin="2" Data="{DynamicResource UpGeometry}" 
                                  Width="14" Height="10"
                                  Fill="{DynamicResource NormalWhiteBrush}" Stretch="Fill" />
                        </Button>
                        <Button x:Name="PART_UpButton" Grid.Column="1" VerticalAlignment="Top"
                                Visibility="Collapsed" Style="{DynamicResource PathButtonStyle}"
                                 Width="80" Height="24">
                            <Path Margin="2" Data="{DynamicResource UpGeometry}" 
                                  Width="14" Height="10"
                                  Fill="{DynamicResource NormalWhiteBrush}" Stretch="Fill" />
                        </Button>
                        <Button x:Name="PART_DownButton" Grid.Column="1" VerticalAlignment="Bottom"
                                 Visibility="Collapsed" Style="{DynamicResource PathButtonStyle}"
                                 Width="80" Height="24">
                            <Path Margin="2" Data="{DynamicResource DownGeometry}" 
                                  Width="14" Height="10"
                                  Fill="{DynamicResource NormalWhiteBrush}" Stretch="Fill"/>
                           
                        </Button>
                    </Grid>
                    <ControlTemplate.Triggers>
                        
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="ContentControl">
                    <Setter Property="SnapsToDevicePixels" Value="True" />
                    <Setter Property="UseLayoutRounding" Value="True" />
                    <Setter Property="Foreground" Value="{Binding Foreground, RelativeSource={RelativeSource AncestorType=controls:SwitchMenu}}" />
                    <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType=controls:SwitchMenu}}" />
                    <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType=controls:SwitchMenu}}" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ContentControl">
                                <Border Padding="10,2" Margin="2"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                        UseLayoutRounding="{TemplateBinding UseLayoutRounding}">
                                    <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel IsItemsHost="True" Orientation="Horizontal" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel IsItemsHost="True" Orientation="Vertical" />
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>